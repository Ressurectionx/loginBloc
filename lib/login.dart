import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/material.dart';import 'colors/colors.dart';import 'colors/fonts.dart';import 'home.dart';class Login extends StatefulWidget {  const Login({Key? key}) : super(key: key);  @override  State<Login> createState() => _LoginState();}class _LoginState extends State<Login> {  final FirebaseAuth _auth=FirebaseAuth.instance;  final GlobalKey<FormState> _formKey=GlobalKey<FormState>();  final TextEditingController _email=TextEditingController();  final TextEditingController _pass=TextEditingController();  String emailError='';  String passError='';  String errorMsg='';  _signin() async{    UserCredential result;    try{      result= await(_auth.signInWithEmailAndPassword(email: _email.text, password: _pass.text));      if(result.user!=null){        Navigator.push(context, MaterialPageRoute(builder: (context)=>Home()));      }    }on FirebaseException catch(e){       print(e.code);       switch(e.code){                  case "user-not-found":           setState(() {             errorMsg="User not found";           });           break;         case "wrong-password":           setState(() {             errorMsg="Wrong Password";           });           break;       }    }  }  @override  Widget build(BuildContext context) {    double height = MediaQuery.of(context).size.height;    double width = MediaQuery.of(context).size.width;    return Scaffold(       body: SingleChildScrollView(           child: Form(             key: _formKey,             child: Column(               mainAxisAlignment: MainAxisAlignment.center,               crossAxisAlignment: CrossAxisAlignment.center,               children: [                 SizedBox(height: 150,width: width,),                 Hero(                   tag: "planet",                   child: Container(                       height: 95,width: 95,                       clipBehavior: Clip.antiAliasWithSaveLayer,                       decoration: BoxDecoration(                           shape: BoxShape.circle,                           color: white.withOpacity(0.5),                           border: Border.all(color: orange,width: 1),                           boxShadow:[                             BoxShadow(                               color:white.withOpacity(0.7),                               offset:const Offset(-1.0,-1.0),                               blurRadius:13,                               spreadRadius:5,                             )                           ]                       ),                       child: Column(                         mainAxisAlignment: MainAxisAlignment.center,                         crossAxisAlignment: CrossAxisAlignment.center,                         children: [                           Image.asset("assets/images/planetDeer2.png",height: 65,width: 65,),                           //  Text("Planet Deer",style: textYellow22,),                         ],)),                 ),                 const SizedBox(height: 25,),                 Container(                   height:46,                   width:width*0.72,                   decoration:BoxDecoration(                       borderRadius:BorderRadius.circular(25),                       color:white,                       border:Border.all(color:grey,width:1.5)),                   child: Center(                     child:Padding(                       padding:const EdgeInsets.all(8.0),                       child:TextFormField(                         controller: _email,                         validator: (value){                           if(value!.isEmpty){                             setState(() {                               emailError= "*Email is required";                             });                           }else{setState(() {                             emailError='';                           });}                         },                         textAlign: TextAlign.center,                         style:TextStyle(color:black),                         decoration:InputDecoration(                             labelStyle:TextStyle(color:black,fontSize: 18,fontWeight: FontWeight.w500,letterSpacing: 1.4),                             hintText:"username",                             hintStyle:TextStyle(color:grey2,fontSize: 14,                                 fontWeight: FontWeight.w400,letterSpacing: 1.4),                             isCollapsed:true,                             border:InputBorder.none                         ),                       ),                     ),                   ),                 ),                 Text(emailError),                 const SizedBox(height: 15,),                 Container(                   height:46,                   width:width*0.72,                   decoration:BoxDecoration(                       borderRadius:BorderRadius.circular(25),                       color:white,                       border:Border.all(color:grey,width:1.5)),                   child: Center(                     child:Padding(                       padding:const EdgeInsets.all(8.0),                       child:TextFormField(                         controller: _pass,                         validator: (value){                           if(value!.isEmpty){                             setState(() {                               passError= "*Password is required";                             });                           }else{setState(() {                             passError='';                           });}                         },                         textAlign: TextAlign.center,                         style:TextStyle(color:black),                         decoration:InputDecoration(                             hintText:"password",                             labelStyle:TextStyle(color:black,fontSize: 18,fontWeight: FontWeight.w500,letterSpacing: 1.4),                             hintStyle:TextStyle(color:grey2,fontSize: 14,),                             isCollapsed:true,                             border:InputBorder.none                         ),                       ),                     ),                   ),                 ),                 Text(passError),                 const SizedBox(height: 30,),                 GestureDetector(                     onTap: (){                           if(_formKey.currentState!.validate()){                               _signin();                           }                     },                     child:Container(                       height:45,                       width:150,                       decoration:BoxDecoration(                           borderRadius:BorderRadius.circular(25),                           color:darkPink.withOpacity(0.7),                           border:Border.all(color:grey,width:1.5)),                       child:Center(child:Text("Login",style: TextStyle(color: white,fontSize: 16,fontWeight: FontWeight.bold),)),                     )) ,                 const SizedBox(height: 50,),                 Text(errorMsg.toString(),style: const TextStyle(color: Colors.redAccent,fontSize: 15),),                 const SizedBox(height: 50,),                 Text("reset password",)               ],),           )),    );  }}